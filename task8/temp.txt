    /**
     * Create a SelectCell instance.
     * @param {number} sheetIndex - Index of the spreadsheet to attach to.
     * @param {number} [zoom=1] - Initial zoom level for cell selection.
     */

    /**
     * Bind mouse events for cell selection to the spreadsheet element.
     * @private
     */

    /**
     * Handle mouse down event to start cell selection.
     * Snaps the selection start to the cell grid.
     * @param {MouseEvent} e - The mouse down event.
     * @private
     */

    /**
     * Handle mouse move event to update the selection rectangle.
     * Updates the current selection endpoint and redraws the selection.
     * @param {MouseEvent} e - The mouse move event.
     * @private
     */

    /**
     * Handle mouse up event to finish the selection.
     * Finalizes the selection rectangle.
     * @private
     */

    /**
     * Draw the selection rectangle on the canvas based on current selection state.
     * Clears previous selection and draws a new rectangle if selecting.
     * @private
     */

    /**
     * Set the zoom level for cell selection and redraw the selection.
     * @param {number} zoom - The new zoom level.
     */

    /**
     * Update the canvas size and redraw the selection.
     * @param {number} height - The new canvas height.
     * @param {number} width - The new canvas width.
     */

    /**
     * Update the canvas position in the DOM.
     * @param {number} x - The new left position in pixels.
     * @param {number} y - The new top position in pixels.
     */

    /**
     * Clear the selection rectangle from the canvas and reset selection state.
     */

    /**
     * Get the current selection coordinates if a selection is in progress.
     * @returns {Object|null} The selection coordinates {startX, startY, endX, endY} or null if not selecting.
     */

    /**
     * Remove event listeners and the canvas from the DOM.
     * Cleans up resources used by this instance.
     */